/*  =========================================================================
    composite-metrics - generated layer of public API

    Copyright (C) 2014 - 2015 Eaton

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef COMPOSITE_METRICS_LIBRARY_H_INCLUDED
#define COMPOSITE_METRICS_LIBRARY_H_INCLUDED

//  Set up environment for the application

//  External dependencies
#include <czmq.h>
#include <malamute.h>
#include <biosproto.h>
#include <lua.h>

//  COMPOSITE_METRICS version macros for compile-time API detection
#define COMPOSITE_METRICS_VERSION_MAJOR 0
#define COMPOSITE_METRICS_VERSION_MINOR 1
#define COMPOSITE_METRICS_VERSION_PATCH 0

#define COMPOSITE_METRICS_MAKE_VERSION(major, minor, patch) \
    ((major) * 10000 + (minor) * 100 + (patch))
#define COMPOSITE_METRICS_VERSION \
    COMPOSITE_METRICS_MAKE_VERSION(COMPOSITE_METRICS_VERSION_MAJOR, COMPOSITE_METRICS_VERSION_MINOR, COMPOSITE_METRICS_VERSION_PATCH)

#if defined (__WINDOWS__)
#   if defined COMPOSITE_METRICS_STATIC
#       define COMPOSITE_METRICS_EXPORT
#   elif defined COMPOSITE_METRICS_INTERNAL_BUILD
#       if defined DLL_EXPORT
#           define COMPOSITE_METRICS_EXPORT __declspec(dllexport)
#       else
#           define COMPOSITE_METRICS_EXPORT
#       endif
#   elif defined COMPOSITE_METRICS_EXPORTS
#       define COMPOSITE_METRICS_EXPORT __declspec(dllexport)
#   else
#       define COMPOSITE_METRICS_EXPORT __declspec(dllimport)
#   endif
#else
#   define COMPOSITE_METRICS_EXPORT
#endif

//  Project has no stable classes, so we build the draft API
#undef  COMPOSITE_METRICS_BUILD_DRAFT_API
#define COMPOSITE_METRICS_BUILD_DRAFT_API

//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
//  Draft classes are by default not built in stable releases
#ifdef COMPOSITE_METRICS_BUILD_DRAFT_API
typedef struct _bios_composite_metrics_server_t bios_composite_metrics_server_t;
#define BIOS_COMPOSITE_METRICS_SERVER_T_DEFINED
typedef struct _bios_composite_metrics_configurator_server_t bios_composite_metrics_configurator_server_t;
#define BIOS_COMPOSITE_METRICS_CONFIGURATOR_SERVER_T_DEFINED
#endif // COMPOSITE_METRICS_BUILD_DRAFT_API


//  Public classes, each with its own header file
#ifdef COMPOSITE_METRICS_BUILD_DRAFT_API
#include "bios_composite_metrics_server.h"
#include "bios_composite_metrics_configurator_server.h"
#endif // COMPOSITE_METRICS_BUILD_DRAFT_API

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
