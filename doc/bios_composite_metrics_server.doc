#### bios_composite_metrics_server - no title found

Provides actor server implementing METRIC protocol.

Please add @discuss section in ../src/bios_composite_metrics_server.cc.

This is the class interface:

    
    // composite metric server
    void
    bios_composite_metrics_server (zsock_t *pipe, void* args);
    
    void
    bios_composite_metrics_server_test (bool verbose);

This is the class self test code:

    zactor_t *server = zactor_new (mlm_server, (void*) "Malamute");
    zstr_sendx (server, "BIND", endpoint, NULL);
    if (verbose)
        zstr_send (server, "VERBOSE");
    
    mlm_client_t *producer = mlm_client_new ();
    mlm_client_connect (producer, endpoint, 1000, "producer");
    mlm_client_set_producer (producer, "METRICS");
    
    mlm_client_t *consumer = mlm_client_new ();
    mlm_client_connect (consumer, endpoint, 1000, "consumer");
    mlm_client_set_consumer (consumer, "METRICS", "temperature@world");
    
    zactor_t *cm_server = zactor_new (bios_composite_metrics_server, (void*) "cm_server");
    if (verbose)
        zstr_send (cm_server, "VERBOSE");
    zstr_sendx (cm_server, "CONNECT", endpoint, NULL);
    zstr_sendx (cm_server, "PRODUCER", "METRICS", NULL);
    zstr_sendx (cm_server, "CONFIG", "src/composite-metrics.cfg.example", NULL);
    zclock_sleep (500);   //THIS IS A HACK TO SETTLE DOWN THINGS
    
    // send one value
    zmsg_t *msg_in;
    msg_in = bios_proto_encode_metric(
            NULL, "temperature", "TH1", "40", "C", -1);
    assert (msg_in);
    mlm_client_send (producer, "temperature@TH1", &msg_in);
    
    zmsg_t *msg_out;
    bios_proto_t *m;
    msg_out = mlm_client_recv (consumer);
    m = bios_proto_decode (&msg_out);
    assert (m);
    assert (streq (bios_proto_value (m), "40"));    // <<< 40 / 1
    bios_proto_destroy (&m);
    
    // send another value
    msg_in = bios_proto_encode_metric(
            NULL, "temperature", "TH2", "100", "C", -1);
    assert (msg_in);
    mlm_client_send (producer, "temperature@TH2", &msg_in);
    
    msg_out = mlm_client_recv (consumer);
    m = bios_proto_decode (&msg_out);
    assert (m);
    assert (streq (bios_proto_value (m), "70"));    // <<< (100 + 40) / 2
    bios_proto_destroy (&m);
    
    // send value for TH1 again
    msg_in = bios_proto_encode_metric(
            NULL, "temperature", "TH1", "70", "C", -1);
    assert (msg_in);
    mlm_client_send (producer, "temperature@TH1", &msg_in);
    
    msg_out = mlm_client_recv (consumer);
    m = bios_proto_decode (&msg_out);
    assert (m);
    assert (streq (bios_proto_value (m), "85"));     // <<< (100 + 70) / 2
    bios_proto_destroy (&m);
    
    zactor_destroy (&cm_server);
    mlm_client_destroy (&consumer);
    mlm_client_destroy (&producer);
    zactor_destroy (&server);
    

