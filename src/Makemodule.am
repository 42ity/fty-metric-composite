################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
program_libs = src/libcomposite_metrics.la ${project_libs}

# Programs need to link the c++ runtime if everything was compiled statically.
if !ENABLE_SHARED
program_libs += -lstdc++ -lm
endif

lib_LTLIBRARIES += src/libcomposite_metrics.la
pkgconfig_DATA = src/libcomposite_metrics.pc

include_HEADERS = \
    include/composite_metrics.h \
    include/composite_metrics_library.h

if ENABLE_DRAFTS
include_HEADERS += \
    include/bios_composite_metrics_server.h \
    include/bios_composite_metrics_configurator_server.h

endif
src_libcomposite_metrics_la_SOURCES = \
    src/logger.cc \
    src/subprocess.cc \
    src/actor_commands.cc \
    src/data.cc \
    src/platform.h

if ENABLE_DRAFTS
src_libcomposite_metrics_la_SOURCES += \
    src/bios_composite_metrics_server.cc \
    src/bios_composite_metrics_configurator_server.cc

endif

src_libcomposite_metrics_la_CPPFLAGS = ${AM_CPPFLAGS}
src_libcomposite_metrics_la_CXXFLAGS = ${AM_CXXFLAGS}

src_libcomposite_metrics_la_LDFLAGS = \
    -version-info @LTVER@ \
    $(LIBTOOL_EXTRA_LDFLAGS)

if ON_MINGW
src_libcomposite_metrics_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

if ON_CYGWIN
src_libcomposite_metrics_la_LDFLAGS += \
    -no-undefined \
    -avoid-version
endif

src_libcomposite_metrics_la_LIBADD = ${project_libs}

if ENABLE_COMPOSITE_METRICS
bin_PROGRAMS += src/composite-metrics
src_composite_metrics_CPPFLAGS = ${AM_CPPFLAGS}
src_composite_metrics_LDADD = ${program_libs}
src_composite_metrics_SOURCES = src/composite_metrics.cc
src_composite_metrics_config_DATA = src/composite-metrics.cfg
src_composite_metrics_configdir = $(sysconfdir)/composite-metrics
if WITH_SYSTEMD_UNITS
src_composite_metrics_servicedir = @prefix@/lib/systemd/system
src_composite_metrics_service_DATA = src/composite-metrics@.service
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_COMPOSITE_METRICS

if ENABLE_COMPOSITE_METRICS_CONFIGURATOR
bin_PROGRAMS += src/composite-metrics-configurator
src_composite_metrics_configurator_CPPFLAGS = ${AM_CPPFLAGS}
src_composite_metrics_configurator_LDADD = ${program_libs}
src_composite_metrics_configurator_SOURCES = src/composite_metrics_configurator.cc
src_composite_metrics_configurator_config_DATA = src/composite-metrics-configurator.cfg
src_composite_metrics_configurator_configdir = $(sysconfdir)/composite-metrics
if WITH_SYSTEMD_UNITS
src_composite_metrics_configurator_servicedir = @prefix@/lib/systemd/system
src_composite_metrics_configurator_service_DATA = src/composite-metrics-configurator.service
src_composite_metrics_configurator_tmpfilesdir = @prefix@/lib/tmpfiles.d/
src_composite_metrics_configurator_tmpfiles_DATA = src/composite-metrics.conf
endif #WITH_SYSTEMD_UNITS
endif #ENABLE_COMPOSITE_METRICS_CONFIGURATOR

if ENABLE_COMPOSITE_METRICS_SELFTEST
check_PROGRAMS += src/composite_metrics_selftest
noinst_PROGRAMS += src/composite_metrics_selftest
src_composite_metrics_selftest_CPPFLAGS = ${AM_CPPFLAGS}
src_composite_metrics_selftest_LDADD = ${program_libs}
src_composite_metrics_selftest_SOURCES = src/composite_metrics_selftest.cc
endif #ENABLE_COMPOSITE_METRICS_SELFTEST

# define custom target for all products of /src
src:
	src/composite-metrics \
	src/composite-metrics-configurator \
	src/composite_metrics_selftest \
	src/libcomposite_metrics.la

	cd $(srcdir); gsl -target:- project.xml

check-local: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/composite_metrics_selftest

check-verbose: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/composite_metrics_selftest -v

# Run the selftest binary under valgrind to check for memory leaks
memcheck: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=memcheck \
		--leak-check=full --show-reachable=yes --error-exitcode=1 \
		--suppressions=$(srcdir)/src/.valgrind.supp \
		$(builddir)/src/composite_metrics_selftest

# Run the selftest binary under valgrind to check for performance leaks
callcheck: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute valgrind --tool=callgrind \
		$(builddir)/src/composite_metrics_selftest

# Run the selftest binary under gdb for debugging
debug: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute gdb -q \
		$(builddir)/src/composite_metrics_selftest

# Run the selftest binary with verbose switch for tracing
animate: src/composite_metrics_selftest
	$(LIBTOOL) --mode=execute $(builddir)/src/composite_metrics_selftest -v

if WITH_GCOV
coverage: src/composite_metrics_selftest
	@echo "called configure --with-gcov"
	lcov --base-directory . --directory . --zerocounters -q
	$(MAKE) check
	lcov --base-directory . --directory . --capture -o coverage.info
	lcov --remove coverage.info "/usr*" -o coverage.info
	lcov --remove coverage.info "composite_metrics_selftest.c" -o coverage.info
	$(RM) -rf coverage/*
	genhtml -o coverage/ -t "composite-metrics test coverage" --num-spaces 4 coverage.info
else
coverage: src/composite_metrics_selftest
	@echo "call make clean && configure --with-gcov to enable code coverage"
	@exit 1
endif

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
